#!/bin/bash

start() {
  echo "Starting $1 task..."
}

succeed() {
  echo "$1 task succeeded!"
}

fail() {
  echo "$1 task failed, exiting..."
  exit 1
}

declare -a apps=($PROJECT_ROOT/core,$PROJECT_ROOT/personal)

pushd `dirname $0` > /dev/null
SCRIPT_PATH=`pwd`
popd > /dev/null
PROJECT_ROOT=$SCRIPT_PATH/..

start 'JSHint'
$PROJECT_ROOT/node_modules/.bin/jshint $PROJECT_ROOT || fail 'JSHint'
succeed 'JSHint'

start 'pylint'
pylint --rcfile=$PROJECT_ROOT/.pylintrc $PROJECT_ROOT/bencook.info ${apps[@]} || fail 'pylint'
succeed 'pylint'

start 'clean'
if [ -d "$PROJECT_ROOT/build" ]; then
  find $PROJECT_ROOT/build -mindepth 1 -not \( -name '.git*' \) -delete || fail 'clean'
else
  mkdir $PROJECT_ROOT/build || fail 'clean'
fi
succeed 'clean'

start 'copy'
cp $PROJECT_ROOT/*.py $PROJECT_ROOT/*.sqlite3 $PROJECT_ROOT/media $PROJECT_ROOT/*/migrations || fail 'copy'
succeed 'copy'


# app/{__pycache__?} to build

# htmlmin > revved files in build
# replace revved file names in views.py's
# cat vendor scripts > revved scripts in build
# replace revved file names in templates
# cat app scripts > revved scripts in build
# replace revved file names in templates
# uglify all scripts
# compass compile (autoprefix, cat, sass, min) > revved files in build
# replace revved file names in templates
# min images/svgs > reved files in build

# need config.rb
# copy fonts

# imagemin
# htmlmin
# cssmin
# rev
# other python QA
# svgmin


# <link type="text/css" rel="stylesheet" href="styles/vendor/flaTimeline.js/jquery.flatimeline.css" />
# <script type="text/javascript" src="scripts/vendor/flaTimeline.js/jquery.flatimeline.js"></script>

# tear down bower/vendor?
